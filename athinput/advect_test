<comment>
problem = 2D density advection test
author  = Elizabeth Paul
config  = --with-problem=advect_2d --with-gas=mhd --with-order=2p --with-integrator=vl --enable-mctracers

<job>
problem_id      = advect_2d     # problem ID: basename of output filenames
maxout          = 4             # Output blocks number from 1 -> maxout
num_domains     = 1             # number of Domains in Mesh

<output1>
out_fmt         = vtk           # History data dump
out             = ratio_map
usr_expr_flag   = 1
id              = ratio_map
dt              = 0.01          # time increment between outputs

<output2>
out_fmt         = vtk           # Binary data dump
out             = prim
dt              = 0.01          # time increment between outputs

<output3>
out_fmt         = vtk
dt              = 0.01
usr_expr_flag   = 1
out             = num_density
id              = num_density

<output4>
out_fmt         = vtk
dt              = 0.01
usr_expr_flag   = 1
out             = d_init
id              = d_init

<time>
cour_no         = 0.5          # The Courant, Friedrichs, & Lewy (CFL) Number
nlim            = 100          # cycle limit
tlim            = 500000000    # time limit

<domain1>
level           = 0           # refinement level this Domain (root=0)
Nx1             = 100         # Number of zones in X1-direction
x1min           = 0           # minimum value of X1
x1max           = 100         # maximum value of X1
bc_ix1          = 4           # boundary condition flag for inner-I (X1)
bc_ox1          = 4           # boundary condition flag for outer-I (X1)

Nx2             = 100          # Number of zones in X2-direction
x2min           = 0             # minimum value of X2
x2max           = 100           # maximum value of X2
bc_ix2          = 4             # boundary condition flag for inner-J (X2)
bc_ox2          = 4             # boundary condition flag for outer-J (X2)

Nx3             = 1            # Number of zones in X3-direction
x3min           = 0             # minimum value of X3
x3max           = 1            # maximum value of X34
bc_ix3          = 4             # boundary condition flag for inner-J (X2)
bc_ox3          = 4             # boundary condition flag for outer-J (X2)

NGrid_x1        = 2
NGrid_x2        = 1
NGrid_x3        = 1

<problem>
distribution     = prop
N_proportional   = 20
#distribution    = unif
#N_tracers       = 100

gamma            = 1.6666666667  # gamma = C_p/C_v
iso_csound       = 1.0           # equavalent to sqrt(gamma*p/d) for p=0.1, d=1

